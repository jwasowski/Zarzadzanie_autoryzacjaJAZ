package repository;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import mapper.ResultSetMapper;

public class UserRepository {
	protected Connection connection;
	protected Statement createTable;
	protected PreparedStatement insert;
	protected PreparedStatement selectAll;
	protected PreparedStatement update;
	protected PreparedStatement delete;
	protected PreparedStatement select;

	ResultSetMapper mapper;

	public UserRepository(Connection connection, ResultSetMapper mapper) {
		this.mapper = mapper;
		this.connection = connection;
		/*createTable = connection.createStatement();
		createTable();
		insert = connection.prepareStatement(addUserSql());
		update = connection.prepareStatement(updateUserSql());
		delete = connection.prepareStatement(removeUserSql());
		select = connection.prepareStatement(selectUserSql());*/
	}

	public String tableName() {
		return "USERS";
	}

	public void createTable() {
		try {
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while (rs.next()) {
				if (rs.getString("TABLE_NAME").equalsIgnoreCase(tableName())) {
					tableExists = true;
					break;
				}
			}
			if (!tableExists)
				createTable.executeUpdate(createTableSql());
		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	public String createTableSql() {
		return "CREATE TABLE USERS (" + "ID INT GENERATED BY DEFAULT AS IDENTITY," + " USERNAME VARCHAR(30),"
				+ " PASSWORD VARCHAR(15)," + " LEVEL VARCHAR(8)," + " PRIMARY KEY (ID))";
	}

	

	

}
